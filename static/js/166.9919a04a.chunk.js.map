{"version":3,"file":"static/js/166.9919a04a.chunk.js","mappings":"4IACA,MAyBA,EAzBmBA,IAAA,IAAC,OAAEC,KAAWC,GAAOF,EAAA,OACtCG,EAAAA,EAAAA,MAAA,OACEC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,KAAK,UACDN,EAAKO,SAAA,EAETC,EAAAA,EAAAA,KAAA,KACET,OAAQA,GAAU,OAClBU,cAAc,QACdC,eAAe,QACfC,YAAa,IACbC,SAAS,UAASL,UAElBC,EAAAA,EAAAA,KAAA,QAAMK,EAAE,iHAEVL,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,YAAUM,GAAG,IAAGP,UACdC,EAAAA,EAAAA,KAAA,QAAMF,KAAK,OAAOO,EAAE,wBAGpB,C,oGCrBD,MAAME,EAAWC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8PAarBC,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAeM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2DAChCrB,IAAA,IAAC,MAAEyB,GAAOzB,EAAA,OAAKyB,EAAMC,MAAMC,UAAU,IAIpCC,EAAWV,EAAAA,GAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4FAMrBS,EAAQZ,EAAAA,GAAOa,GAAEC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,2IAOnBY,IAAA,IAAC,MAAER,GAAOQ,EAAA,OAAKR,EAAMC,MAAMQ,UAAU,IAEnCC,EAAcjB,EAAAA,GAAOkB,EAACC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,6JAOxBiB,IAAA,IAAC,MAAEb,GAAOa,EAAA,OAAKb,EAAMC,MAAMa,UAAU,I,uBCjChD,MAeA,EAfkBC,KAChB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,IAAe,cAAe,CAC1CC,UAAW,yBAEb,OACExC,EAAAA,EAAAA,MAACc,EAAQ,CAAAR,SAAA,EACPC,EAAAA,EAAAA,KAACY,EAAa,KACdnB,EAAAA,EAAAA,MAACyB,EAAQ,CAAAnB,SAAA,EACPC,EAAAA,EAAAA,KAACoB,EAAK,CAAArB,SAAEgC,EAAE,mCACV/B,EAAAA,EAAAA,KAACyB,EAAW,CAAA1B,SAAEgC,EAAE,4BAElB/B,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAAAnC,SAAEgC,EAAE,YACF,EClBf,EAJkBI,KACTnC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,c,uBCGZ,MAAMqC,EAAMC,EAAQ,MAyFpB,EAvFc/C,IAAmC,IAAlC,MAAEgD,EAAK,kBAAEC,GAAmBjD,EACzC,MAAOkD,EAAOC,IAAYC,EAAAA,EAAAA,UAASJ,EAAME,OA0CzC,OACE/C,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,CAAI,6HAAsB,KAAA4C,OAAMH,EAAM,GAAGI,YAAW,UAEpD5C,EAAAA,EAAAA,KAAA,OAAAD,SACGyC,EAAMK,KAAIC,IAEPrD,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEL,MAAM,QACNC,OAAO,QACPmD,IAAKD,EAAKE,QAAQC,OAAO,GAAGC,KAC5BC,IAAI,aAEN1D,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,KAAAM,SAAA,CAAG,2DAAY+C,EAAKM,MAAMC,aAC1BrD,EAAAA,EAAAA,KAAA,KAAAD,SAAI+C,EAAKE,QAAQM,cAGrB7D,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAI+C,EAAKS,SACTvD,EAAAA,EAAAA,KAAA,UAAQwD,QAASA,IA9DPjC,KAAmC,IAAhCkC,IAAKC,EAAS,SAAEC,GAAUpC,EACnDa,EACGwB,YAAY,CAAEF,YAAWC,SAAUA,EAAW,IAC9CE,MAAKjC,IAAsB,IAArB,YAAEkC,GAAalC,EACpBa,GAASsB,GACPA,EAAUlB,KAAIC,GACZA,EAAKW,MAAQK,EAAYL,IAAMK,EAAchB,KAEhD,GACD,EAqD+BkB,CAAgBlB,GAAM/C,SAAC,OAC9CC,EAAAA,EAAAA,KAAA,KAAAD,SAAI+C,EAAKa,YACT3D,EAAAA,EAAAA,KAAA,UACEiE,SAA4B,IAAlBnB,EAAKa,SACfH,QAASA,IAtDDU,KAAmC,IAAhCT,IAAKC,EAAS,SAAEC,GAAUO,EAC/CP,EAAW,GACbvB,EACGwB,YAAY,CAAEF,YAAWC,SAAUA,EAAW,IAC9CE,MAAKM,IAAsB,IAArB,YAAEL,GAAaK,EACpB1B,GAASsB,GACPA,EAAUlB,KAAIC,GACZA,EAAKW,MAAQK,EAAYL,IAAMK,EAAchB,KAEhD,GAEP,EA2C6BsB,CAAgBtB,GAAM/C,SACtC,OAGDC,EAAAA,EAAAA,KAAA,KAAAD,SAAI+C,EAAKS,MAAQT,EAAKa,YACtB3D,EAAAA,EAAAA,KAAA,UAAQwD,QAASA,KAAMa,OA7ChBX,EA6C6BZ,EAAKW,SA5ChC,IAAjBjB,EAAM8B,OACR/B,IAEAH,EACGmC,uBAAuBjC,EAAMmB,IAAKC,GAClCG,MAAKW,GACJ/B,GAASgC,GACPA,EAAUC,QAAO5B,GAAQA,EAAKW,MAAQC,SAR3BA,KA6CuC,EAAA3D,UAC5CC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CAACpF,OAAQ,gBAzBhBuD,EAAKW,UAgCrBzD,EAAAA,EAAAA,KAACmC,EAAS,MACN,ECrFJC,EAAMC,EAAQ,MAiDpB,EA/CauC,KACX,MAAOC,EAAQC,IAAapC,EAAAA,EAAAA,UAAS,KAE9BqC,EAAaC,IAAkBtC,EAAAA,EAAAA,UAAS,KAExCuC,EAAWC,IAAgBxC,EAAAA,EAAAA,UAAS,KAEpCyC,EAAOC,IAAY1C,EAAAA,EAAAA,UAAS,KAEnC2C,EAAAA,EAAAA,YAAU,KACRjD,EACGkD,YACAzB,MAAKW,IACJM,EAAUN,EAAKK,QACfG,EAAeR,EAAKO,aACpBG,GAAa,EAAM,IAEpBK,OAAMJ,IACLC,EAASD,GACTD,GAAa,EAAM,GACnB,GACH,IAWH,OAAQL,EAAOP,QAGbtE,EAAAA,EAAAA,KAAAwF,EAAAA,SAAA,CAAAzF,SACG8E,EAAOhC,KAAIP,IACVtC,EAAAA,EAAAA,KAACyF,EAAK,CACJlD,kBAAmBA,KAAMA,OAfPmD,EAeyBpD,EAAMmB,SAdvDrB,EAAIuD,YAAYD,GAAS7B,MAAKvE,IAAkB,IAAjB,QAAEsG,GAAStG,EAC5B,+BAAZsG,GACEd,GAAUe,GACRA,EAAWnB,QAAO5B,GAAQA,EAAKW,MAAQiC,KACxC,IALmBA,KAeoC,EAEtDpD,MAAOA,GADFA,EAAMmB,UANjBzD,EAAAA,EAAAA,KAAC8B,EAAS,GAWX,C","sources":["images/icons/IconBasket.js","components/EmptyCart/EmptyCart.styled.js","components/EmptyCart/EmptyCart.js","components/Forms/FormOrder/FormOrder.js","components/Order/Order.js","pages/UserPage/Pages/Cart/Cart.js"],"sourcesContent":["import * as React from 'react';\nconst IconBasket = ({ stroke, ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    viewBox=\"0 1 23 23\"\n    fill=\"none\"\n    {...props}\n  >\n    <g\n      stroke={stroke || '#fff'}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      clipPath=\"url(#a)\"\n    >\n      <path d=\"M4 7h16M10 11v6M14 11v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3\" />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nexport default IconBasket;\n","import IconBag from 'images/icons/IconBag';\nimport { styled } from 'styled-components';\n\nexport const WrapCart = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  align-items: center;\n  margin-top: 40px;\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 0px;\n  }\n`;\nexport const StyledIconBag = styled(IconBag)`\n  stroke: ${({ theme }) => theme.color.mainColor3};\n  width: 70px;\n  height: 70px;\n`;\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n`;\nexport const Title = styled.h3`\n  font-family: 'Open Sans Hebrew', sans-serif;\n\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.4;\n\n  color: ${({ theme }) => theme.color.btnColorBG};\n`;\nexport const Description = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  color: #303130;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.43;\n\n  color: ${({ theme }) => theme.color.mainColor4};\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  Description,\n  StyledIconBag,\n  Title,\n  WrapCart,\n  WrapText,\n} from './EmptyCart.styled';\nimport Button from 'components/Button/Button';\n\nconst EmptyCart = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.emptyCart',\n  });\n  return (\n    <WrapCart>\n      <StyledIconBag />\n      <WrapText>\n        <Title>{t('Your cart is currently empty')}</Title>\n        <Description>{t('Check out the news')}</Description>\n      </WrapText>\n      <Button>{t('Rent')}</Button>\n    </WrapCart>\n  );\n};\nexport default EmptyCart;\n","const FormOrder = () => {\n  return <p>FormOrder</p>;\n};\n\nexport default FormOrder;\n","import FormOrder from 'components/Forms/FormOrder/FormOrder';\nimport IconBasket from 'images/icons/IconBasket';\nimport { useState } from 'react';\n\nconst api = require('../../api');\n\nconst Order = ({ order, handleRemoveOrder }) => {\n  const [items, setItems] = useState(order.items);\n\n  const handleIncrement = ({ _id: productId, quantity }) => {\n    api\n      .setQuantity({ productId, quantity: quantity + 1 })\n      .then(({ updatedItem }) => {\n        setItems(prevItems =>\n          prevItems.map(item =>\n            item._id === updatedItem._id ? updatedItem : item\n          )\n        );\n      });\n  };\n\n  const handleDecrement = ({ _id: productId, quantity }) => {\n    if (quantity > 1) {\n      api\n        .setQuantity({ productId, quantity: quantity - 1 })\n        .then(({ updatedItem }) => {\n          setItems(prevItems =>\n            prevItems.map(item =>\n              item._id === updatedItem._id ? updatedItem : item\n            )\n          );\n        });\n    }\n  };\n\n  const handleRemove = productId => {\n    if (items.length === 1) {\n      handleRemoveOrder();\n    } else {\n      api\n        .removeProductFromOrder(order._id, productId)\n        .then(data =>\n          setItems(prefItems =>\n            prefItems.filter(item => item._id !== productId)\n          )\n        );\n    }\n  };\n\n  return (\n    <div>\n      <h2>Оформлення замовлення {`( ${items[0].serviceType} )`}</h2>\n\n      <div>\n        {items.map(item => {\n          return (\n            <div key={item._id}>\n              <div>\n                <img\n                  width=\"150px\"\n                  height=\"150px\"\n                  src={item.product.photos[0].path}\n                  alt=\"product\"\n                />\n                <div>\n                  <p>Продавець: {item.owner.nickname}</p>\n                  <p>{item.product.name}</p>\n                </div>\n              </div>\n              <div>\n                <p>{item.price}</p>\n                <button onClick={() => handleIncrement(item)}>+</button>\n                <p>{item.quantity}</p>\n                <button\n                  disabled={item.quantity === 1}\n                  onClick={() => handleDecrement(item)}\n                >\n                  -\n                </button>\n                <p>{item.price * item.quantity}</p>\n                <button onClick={() => handleRemove(item._id)}>\n                  <IconBasket stroke={'#000'} />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <FormOrder />\n    </div>\n  );\n};\n\nexport default Order;\n","import EmptyCart from 'components/EmptyCart/EmptyCart';\nimport Order from 'components/Order/Order';\nimport { useEffect, useState } from 'react';\n\nconst api = require('../../../../api');\n\nconst Cart = () => {\n  const [orders, setOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [totalOrders, setTotalOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [isLoading, setIsLoading] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState([]);\n\n  useEffect(() => {\n    api\n      .getOrders()\n      .then(data => {\n        setOrders(data.orders);\n        setTotalOrders(data.totalOrders);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleRemoveOrder = orderId => {\n    api.removeOrder(orderId).then(({ message }) => {\n      message === 'Order successfully removed' &&\n        setOrders(prefOrders =>\n          prefOrders.filter(item => item._id !== orderId)\n        );\n    });\n  };\n\n  return !orders.length ? (\n    <EmptyCart />\n  ) : (\n    <>\n      {orders.map(order => (\n        <Order\n          handleRemoveOrder={() => handleRemoveOrder(order._id)}\n          key={order._id}\n          order={order}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Cart;\n"],"names":["_ref","stroke","props","_jsxs","xmlns","width","height","viewBox","fill","children","_jsx","strokeLinecap","strokeLinejoin","strokeWidth","clipPath","d","id","WrapCart","styled","div","_templateObject","_taggedTemplateLiteral","StyledIconBag","IconBag","_templateObject2","theme","color","mainColor3","WrapText","_templateObject3","Title","h3","_templateObject4","_ref2","btnColorBG","Description","p","_templateObject5","_ref3","mainColor4","EmptyCart","t","useTranslation","keyPrefix","Button","FormOrder","api","require","order","handleRemoveOrder","items","setItems","useState","concat","serviceType","map","item","src","product","photos","path","alt","owner","nickname","name","price","onClick","_id","productId","quantity","setQuantity","then","updatedItem","prevItems","handleIncrement","disabled","_ref4","_ref5","handleDecrement","handleRemove","length","removeProductFromOrder","data","prefItems","filter","IconBasket","Cart","orders","setOrders","totalOrders","setTotalOrders","isLoading","setIsLoading","error","setError","useEffect","getOrders","catch","_Fragment","Order","orderId","removeOrder","message","prefOrders"],"sourceRoot":""}