{"version":3,"file":"static/js/94.27ea5039.chunk.js","mappings":"qMAEO,MAAMA,E,QAAYC,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2F,aCIlC,MAAMC,EAAMC,EAAQ,MAyFpB,EAvFiBC,KACf,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OAERC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAE1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAElCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IACzCK,QAAQC,IAAI,WAAYH,GAGxB,MAAOI,EAAeC,IAAoBR,EAAAA,EAAAA,aAEnCS,EAAWC,IAAgBV,EAAAA,EAAAA,WAAS,IAEpCW,EAAOC,IAAYZ,EAAAA,EAAAA,aAGnBa,EAAcC,IAAmBC,EAAAA,EAAAA,MAqBxC,OAnBAC,EAAAA,EAAAA,YAAU,KACRN,GAAa,GAEbjB,EACGwB,aAAa,CACZnB,OACAG,aAEDiB,MAAKC,IACJf,EAAYe,EAAKhB,UACjBK,EAAiBW,EAAKZ,eACtBG,GAAa,EAAM,IAEpBU,OAAMT,IACLC,EAASD,GACTD,GAAa,EAAM,GACnB,GACH,CAACZ,EAAMG,EAAUY,IAEbjB,GACLyB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,KAEPD,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,CAAAC,SACGf,GACCY,EAAAA,EAAAA,KAAA,KAAAG,SAAG,eACDrB,EAASsB,QACXC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACEH,EAAAA,EAAAA,KAACjC,EAAS,CAAAoC,SACPrB,EAASwB,KAAIC,IACZP,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CACfC,iBAAkBA,IAChB1B,EAAYD,EAAS4B,QAAOC,GAAMA,EAAGC,MAAQL,EAAQK,OAEvDL,QAASA,KALJA,EAAQK,SAYpBhC,EAAWH,EAAOS,IACjBc,EAAAA,EAAAA,KAAA,UACEa,KAAK,SACLC,MAAM,YACNC,QAASA,IAAMrC,EAAQD,EAAO,GAAG0B,SAClC,cAIFvB,EAAWM,GAAiBN,EAAWH,EAAOS,IAC7Cc,EAAAA,EAAAA,KAAA,UACEa,KAAK,SACLC,MAAM,mBACNC,QAASA,IAAMlC,EAAYD,EAAW,GAAGuB,SAC1C,eAMLH,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CAAAb,SAAC,gFAGf,C","sources":["pages/UserPage/Pages/Favorite/Favorite.styled.js","pages/UserPage/Pages/Favorite/Favorite.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCards = styled.ul`\n  display: flex;\n  gap: 64px 20px;\n  flex-wrap: wrap;\n  margin-bottom: 80px;\n`;\n","import NotFound from 'components/NotFound/NotFound';\nimport UsersProductCard from 'components/UsersProductCard/UsersProductCard';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams, useSearchParams } from 'react-router-dom';\nimport { ListCards } from './Favorite.styled';\n\nconst api = require('../../../../api');\n\nconst Favorite = () => {\n  const { id } = useParams();\n  // eslint-disable-next-line no-unused-vars\n  const [page, setPage] = useState(1);\n  // eslint-disable-next-line no-unused-vars\n  const [pageSize, setPageSize] = useState(9);\n\n  const [products, setProducts] = useState([]);\n  console.log('products', products);\n\n  // eslint-disable-next-line no-unused-vars\n  const [totalProducts, setTotalProducts] = useState();\n\n  const [isLoading, setIsLoading] = useState(true);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState();\n\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    api\n      .getFavorites({\n        page,\n        pageSize,\n      })\n      .then(data => {\n        setProducts(data.products);\n        setTotalProducts(data.totalProducts);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [page, pageSize, searchParams]);\n\n  return id ? (\n    <Outlet />\n  ) : (\n    <>\n      {isLoading ? (\n        <p>loading...</p>\n      ) : products.length ? (\n        <>\n          <ListCards>\n            {products.map(product => (\n              <li key={product._id}>\n                <UsersProductCard\n                  onRemoveFavorite={() =>\n                    setProducts(products.filter(el => el._id !== product._id))\n                  }\n                  product={product}\n                />\n              </li>\n            ))}\n          </ListCards>\n\n          {/* <p>page {page}</p> */}\n          {pageSize * page < totalProducts && (\n            <button\n              type=\"button\"\n              title=\"next page\"\n              onClick={() => setPage(page + 1)}\n            >\n              next page\n            </button>\n          )}\n          {pageSize < totalProducts && pageSize * page < totalProducts && (\n            <button\n              type=\"button\"\n              title=\"next load 9 card\"\n              onClick={() => setPageSize(pageSize + 9)}\n            >\n              next 9\n            </button>\n          )}\n        </>\n      ) : (\n        <NotFound>Тут поки пусто</NotFound>\n      )}\n    </>\n  );\n};\n\nexport default Favorite;\n"],"names":["ListCards","styled","ul","_templateObject","_taggedTemplateLiteral","api","require","Favorite","id","useParams","page","setPage","useState","pageSize","setPageSize","products","setProducts","console","log","totalProducts","setTotalProducts","isLoading","setIsLoading","error","setError","searchParams","setSearchParams","useSearchParams","useEffect","getFavorites","then","data","catch","_jsx","Outlet","_Fragment","children","length","_jsxs","map","product","UsersProductCard","onRemoveFavorite","filter","el","_id","type","title","onClick","NotFound"],"sourceRoot":""}