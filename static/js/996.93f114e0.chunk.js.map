{"version":3,"file":"static/js/996.93f114e0.chunk.js","mappings":"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","sources":["images/icons/IconBasket.js","images/icons/IconCalendarTime.js","components/EmptyCart/EmptyCart.styled.js","components/EmptyCart/EmptyCart.js","components/Forms/FormOrder/FormOrder.styled.js","components/Forms/FormOrder/FormOrder.js","components/Order/Order.styled.js","components/Order/Order.js","pages/UserPage/Pages/Cart/Cart.styled.js","pages/UserPage/Pages/Cart/Cart.js"],"sourcesContent":["import * as React from 'react';\nconst IconBasket = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    stroke={'#fff'}\n    className={className}\n    fill=\"none\"\n  >\n    <g\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      clipPath=\"url(#a)\"\n    >\n      <path d=\"M4 7h16M10 11v6M14 11v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3\" />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nexport default IconBasket;\n","import * as React from 'react';\nconst IconCalendarTime = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    {...props}\n  >\n    <g\n      stroke=\"#6C6158\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      clipPath=\"url(#a)\"\n    >\n      <path d=\"M11.795 21H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4\" />\n      <path d=\"M14 18a4 4 0 1 0 8 0 4 4 0 0 0-8 0ZM15 3v4M7 3v4M3 11h16\" />\n      <path d=\"M18 16.496V18l1 1\" />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nexport default IconCalendarTime;\n","import IconBag from 'images/icons/IconBag';\nimport { styled } from 'styled-components';\n\nexport const WrapCart = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  align-items: center;\n  margin-top: 40px;\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 0px;\n  }\n`;\nexport const StyledIconBag = styled(IconBag)`\n  stroke: ${({ theme }) => theme.color.mainColor3};\n  width: 70px;\n  height: 70px;\n`;\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n`;\nexport const Title = styled.h3`\n  font-family: 'Open Sans Hebrew', sans-serif;\n\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.4;\n\n  color: ${({ theme }) => theme.color.btnColorBG};\n`;\nexport const Description = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  color: #303130;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.43;\n\n  color: ${({ theme }) => theme.color.mainColor4};\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  Description,\n  StyledIconBag,\n  Title,\n  WrapCart,\n  WrapText,\n} from './EmptyCart.styled';\nimport Button from 'components/Button/Button';\n\nconst EmptyCart = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.emptyCart',\n  });\n  return (\n    <WrapCart>\n      <StyledIconBag />\n      <WrapText>\n        <Title>{t('Your cart is currently empty')}</Title>\n        <Description>{t('Check out the news')}</Description>\n      </WrapText>\n      <Button>{t('Rent')}</Button>\n    </WrapCart>\n  );\n};\nexport default EmptyCart;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nexport const LabelOrder = styled.label`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\nexport const FieldOrder = styled(Field)`\n  width: 370px;\n  padding: 8px;\n  border-radius: 2px;\n  outline: none;\n\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.43;\n  border: 1px solid;\n\n  color: ${({ theme }) => theme.color.additionalColorBrown};\n  border-color: ${({ theme }) => theme.color.mainColor2};\n`;\n\nexport const FieldSelect = styled(FieldOrder)`\n  color: ${({ theme }) => theme.color.mainColor5};\n  min-width: 370px;\n`;\nexport const TextDescription = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  line-height: 1.43;\n  font-size: 14px;\n\n  color: ${({ theme }) => theme.color.mainColor};\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  FieldOrder,\n  FieldSelect,\n  LabelOrder,\n  StyledForm,\n  TextDescription,\n} from './FormOrder.styled';\nimport { Formik } from 'formik';\nimport { validationFormOrderScheme } from 'schemas';\nimport { ErrorMessage } from '../Form.styled';\n\nconst FormOrder = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.formOrder',\n  });\n\n  const handleFormOrderSubmit = (values, { resetForm }) => {\n    console.log(values);\n\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fullName: '',\n          phoneNumber: '',\n          email: '',\n          deliveryService: '',\n          deliveryType: '',\n          city: '',\n          address: '',\n        }}\n        validationSchema={validationFormOrderScheme}\n        // validateOnChange={false}\n        onSubmit={handleFormOrderSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          setFieldValue,\n        }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <LabelOrder>\n              {t('urerFullName')}*\n              <FieldOrder\n                name=\"fullName\"\n                value={values.fullName}\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Бондаренко А.А.\"\n              />\n              {errors.fullName && touched.fullName && (\n                <ErrorMessage>{t(errors.fullName)}</ErrorMessage>\n              )}\n            </LabelOrder>\n            <LabelOrder>\n              {t('userPhoneNumber')}*\n              <FieldOrder\n                name=\"phoneNumber\"\n                value={values.phoneNumber}\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"+380\"\n              />\n              {errors.phoneNumber && touched.phoneNumber && (\n                <ErrorMessage>{t(errors.phoneNumber)}</ErrorMessage>\n              )}\n            </LabelOrder>\n            <LabelOrder>\n              {t('email')}*\n              <FieldOrder\n                name=\"email\"\n                value={values.email}\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"example@gmail.com\"\n              />\n              {errors.email && touched.email && (\n                <ErrorMessage>{t(errors.email)}</ErrorMessage>\n              )}\n            </LabelOrder>\n            <LabelOrder>\n              {t('Delivery service')}*\n              <FieldSelect\n                as=\"select\"\n                name=\"deliveryService\"\n                onChange={e => setFieldValue('deliveryService', e.target.value)}\n                value={values.deliveryService}\n              >\n                <option value=\"\">\n                  --- {t('Select delivery services')} ---\n                </option>\n                <option value=\"NovaPost\">{t('NovaPost')}</option>\n                <option value=\"UkrPost\">{t('UkrPost')}</option>\n                <option value=\"Meest\">Meest</option>\n              </FieldSelect>\n            </LabelOrder>\n            <LabelOrder>\n              {t('Delivery type')}*\n              <FieldSelect\n                as=\"select\"\n                name=\"deliveryType\"\n                onChange={e => setFieldValue('deliveryType', e.target.value)}\n                value={values.deliveryType}\n              >\n                <option value=\"\">--- {t('Select branch type')} ---</option>\n                <option value=\"postOffice\">{t('postOffice')}</option>\n                <option value=\"section\">{t('section')}</option>\n              </FieldSelect>\n            </LabelOrder>\n            <LabelOrder>\n              {t('city')}*\n              <FieldOrder\n                name=\"city\"\n                value={values.city}\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"\"\n              />\n              {errors.city && touched.city && (\n                <ErrorMessage>{t(errors.city)}</ErrorMessage>\n              )}\n            </LabelOrder>\n            <LabelOrder>\n              {t('address')}*\n              <FieldOrder\n                name=\"address\"\n                value={values.address}\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Sanocka 10/48\"\n              />\n              {errors.address && touched.address && (\n                <ErrorMessage>{t(errors.address)}</ErrorMessage>\n              )}\n            </LabelOrder>\n            <TextDescription>*{t('Text required')}</TextDescription>\n            <button type=\"submit\">Submit</button>\n          </StyledForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormOrder;\n","import IconBasket from 'images/icons/IconBasket';\nimport styled from 'styled-components';\n\nexport const WrapCardOrder = styled.div`\n  gap: 32px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nexport const TitleOrder = styled.h2`\n  display: none;\n  @media screen and (min-width: 768px) {\n    display: block;\n    font-family: 'Open Sans Hebrew', sans-serif;\n    font-size: 20px;\n    font-weight: 700;\n    line-height: 1.4;\n\n    color: ${({ theme }) => theme.color.mainColor5};\n  }\n`;\nexport const MainWrap = styled.div`\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\nexport const WrapImage = styled.div`\n  width: 150px;\n  height: 150px;\n  border-radius: 2px;\n  overflow: hidden;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    margin: 0;\n  }\n`;\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\nexport const WrapGeneralText = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    width: 498px;\n    gap: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 765px;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\nexport const ButtonCalendar = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  border: none;\n\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  @media screen and (min-width: 768px) {\n    right: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    top: 0px;\n    right: 350px;\n  }\n`;\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n  }\n`;\nexport const TextSeller = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n\n  color: ${({ theme }) => theme.color.btnColorBG};\n`;\nexport const TextName = styled(TextSeller)`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\nexport const SecondaryTitle = styled(TextSeller)`\n  color: ${({ theme }) => theme.color.mainColor2};\n`;\nexport const TextValue = styled(TextName)`\n  text-transform: none;\n`;\nexport const WrapSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media screen and (min-width: 1280px) {\n    width: 308px;\n  }\n`;\nexport const Wrap = styled.div`\n  min-width: 60px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nexport const WrapCalc = styled.div`\n  gap: 8px;\n  display: flex;\n  /* justify-content: space-evenly; */\n  align-items: center;\n`;\nexport const ButtonMath = styled.button`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\n\nexport const StyledMinus = styled.div`\n  width: 16px;\n  border: 1px solid;\n  border-radius: 2px;\n  border-color: ${({ theme, $disabled }) =>\n    $disabled ? theme.color.mainColor2 : theme.color.mainColor5};\n  margin: 0 auto;\n`;\nexport const ButtonDelete = styled.button`\n  cursor: pointer;\n  padding: 8px;\n  width: 40px;\n  height: 40px;\n  border: none;\n  background-color: transparent;\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n    padding: 0;\n  }\n`;\nexport const StyledIconBasket = styled(IconBasket)`\n  width: 24px;\n  height: 24pc;\n  stroke: ${({ theme }) => theme.color.mainColor5};\n`;\n","import FormOrder from 'components/Forms/FormOrder/FormOrder';\nimport { useState } from 'react';\nimport {\n  TitleOrder,\n  WrapCardOrder,\n  MainWrap,\n  WrapImage,\n  Image,\n  TextSeller,\n  TextName,\n  TextValue,\n  SecondaryTitle,\n  WrapSection,\n  ButtonDelete,\n  Wrap,\n  WrapCalc,\n  WrapText,\n  ButtonMath,\n  StyledMinus,\n  StyledIconBasket,\n  WrapGeneralText,\n  ButtonCalendar,\n} from './Order.styled';\nimport { useTranslation } from 'react-i18next';\nimport IconPlus from 'images/icons/IconPlus';\nimport IconCalendarTime from 'images/icons/IconCalendarTime';\n\nconst api = require('../../api');\n\nconst Order = ({ order, handleRemoveOrder }) => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.order',\n  });\n\n  const [items, setItems] = useState(order.items);\n\n  const handleIncrement = ({ _id: productId, quantity }) => {\n    api\n      .setQuantity({ productId, quantity: quantity + 1 })\n      .then(({ updatedItem }) => {\n        setItems(prevItems =>\n          prevItems.map(item =>\n            item._id === updatedItem._id ? updatedItem : item\n          )\n        );\n      });\n  };\n\n  const handleDecrement = ({ _id: productId, quantity }) => {\n    if (quantity > 1) {\n      api\n        .setQuantity({ productId, quantity: quantity - 1 })\n        .then(({ updatedItem }) => {\n          setItems(prevItems =>\n            prevItems.map(item =>\n              item._id === updatedItem._id ? updatedItem : item\n            )\n          );\n        });\n    }\n  };\n\n  const handleRemove = productId => {\n    if (items.length === 1) {\n      handleRemoveOrder();\n    } else {\n      api\n        .removeProductFromOrder(order._id, productId)\n        .then(data =>\n          setItems(prefItems =>\n            prefItems.filter(item => item._id !== productId)\n          )\n        );\n    }\n  };\n  return (\n    <WrapCardOrder>\n      <TitleOrder>\n        {t('order processing')} {`( ${items[0].serviceType} )`}\n      </TitleOrder>\n\n      <div>\n        {items.map(item => {\n          return (\n            <MainWrap key={item._id}>\n              <WrapImage>\n                <Image src={item.product.photos[0].path} alt=\"product\" />\n              </WrapImage>\n              <WrapGeneralText>\n                {item.serviceType === 'rent' && (\n                  <ButtonCalendar>\n                    <IconCalendarTime />\n                  </ButtonCalendar>\n                )}\n                <WrapText>\n                  <TextSeller>\n                    {t('seller')}: {item.owner.nickname}\n                  </TextSeller>\n                  <TextName>{item.product.name}</TextName>\n                </WrapText>\n                <WrapSection>\n                  <Wrap>\n                    <SecondaryTitle>{t('price')}:</SecondaryTitle>\n                    <TextValue>{item.price} kč</TextValue>\n                  </Wrap>\n                  <Wrap style={{ alignItems: 'center' }}>\n                    <SecondaryTitle>{t('quantity')}:</SecondaryTitle>\n                    <WrapCalc>\n                      <ButtonMath\n                        disabled={item.quantity === 1}\n                        onClick={() => handleDecrement(item)}\n                      >\n                        <StyledMinus $disabled={item.quantity === 1} />\n                      </ButtonMath>\n                      <TextValue style={{ fontWeight: 400 }}>\n                        {item.quantity}\n                      </TextValue>\n                      <ButtonMath onClick={() => handleIncrement(item)}>\n                        <IconPlus />\n                      </ButtonMath>\n                    </WrapCalc>\n                  </Wrap>\n                  <Wrap>\n                    <SecondaryTitle>{t('amount')}:</SecondaryTitle>\n                    <TextValue>{item.price * item.quantity} kč</TextValue>\n                  </Wrap>\n                  <ButtonDelete onClick={() => handleRemove(item._id)}>\n                    <StyledIconBasket />\n                  </ButtonDelete>\n                </WrapSection>\n              </WrapGeneralText>\n            </MainWrap>\n          );\n        })}\n      </div>\n\n      <FormOrder />\n    </WrapCardOrder>\n  );\n};\n\nexport default Order;\n","import styled from 'styled-components';\n\nexport const ListOrders = styled.ul``;\n","import EmptyCart from 'components/EmptyCart/EmptyCart';\nimport Order from 'components/Order/Order';\nimport { useEffect, useState } from 'react';\nimport { ListOrders } from './Cart.styled';\n\nconst api = require('../../../../api');\n\nconst Cart = () => {\n  const [orders, setOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [totalOrders, setTotalOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [isLoading, setIsLoading] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState([]);\n\n  useEffect(() => {\n    api\n      .getOrders()\n      .then(data => {\n        setOrders(data.orders);\n        setTotalOrders(data.totalOrders);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleRemoveOrder = orderId => {\n    api.removeOrder(orderId).then(({ message }) => {\n      message === 'Order successfully removed' &&\n        setOrders(prefOrders =>\n          prefOrders.filter(item => item._id !== orderId)\n        );\n    });\n  };\n\n  return !orders.length ? (\n    <EmptyCart />\n  ) : (\n    <ListOrders>\n      {orders.map(order => (\n        <li key={order._id}>\n          <Order\n            handleRemoveOrder={() => handleRemoveOrder(order._id)}\n            order={order}\n          />\n        </li>\n      ))}\n    </ListOrders>\n  );\n};\n\nexport default Cart;\n"],"names":["_ref","className","_jsxs","xmlns","width","height","stroke","fill","children","_jsx","strokeLinecap","strokeLinejoin","strokeWidth","clipPath","d","id","props","WrapCart","styled","div","_templateObject","_taggedTemplateLiteral","StyledIconBag","IconBag","_templateObject2","theme","color","mainColor3","WrapText","_templateObject3","Title","h3","_templateObject4","_ref2","btnColorBG","Description","p","_templateObject5","_ref3","mainColor4","EmptyCart","t","useTranslation","keyPrefix","Button","StyledForm","Form","LabelOrder","label","mainColor5","FieldOrder","Field","additionalColorBrown","mainColor2","FieldSelect","_ref4","TextDescription","_ref5","mainColor","FormOrder","_Fragment","Formik","initialValues","fullName","phoneNumber","email","deliveryService","deliveryType","city","address","validationSchema","validationFormOrderScheme","onSubmit","handleFormOrderSubmit","values","resetForm","console","log","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","name","value","type","onChange","onBlur","placeholder","ErrorMessage","as","e","target","WrapCardOrder","TitleOrder","h2","MainWrap","WrapImage","Image","img","WrapGeneralText","_templateObject6","ButtonCalendar","button","_templateObject7","_templateObject8","TextSeller","_templateObject9","TextName","_templateObject10","SecondaryTitle","_templateObject11","TextValue","_templateObject12","WrapSection","_templateObject13","Wrap","_templateObject14","WrapCalc","_templateObject15","ButtonMath","_templateObject16","StyledMinus","_templateObject17","$disabled","ButtonDelete","_templateObject18","StyledIconBasket","IconBasket","_templateObject19","_ref6","api","require","order","handleRemoveOrder","items","setItems","useState","concat","serviceType","map","item","src","product","photos","path","alt","IconCalendarTime","owner","nickname","price","style","alignItems","disabled","quantity","onClick","_id","productId","setQuantity","then","updatedItem","prevItems","handleDecrement","fontWeight","handleIncrement","IconPlus","handleRemove","length","removeProductFromOrder","data","prefItems","filter","ListOrders","ul","Cart","orders","setOrders","totalOrders","setTotalOrders","isLoading","setIsLoading","error","setError","useEffect","getOrders","catch","Order","orderId","removeOrder","message","prefOrders"],"sourceRoot":""}