{"version":3,"file":"static/js/653.85fa82ba.chunk.js","mappings":"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","sources":["images/icons/IconBasket.js","components/Forms/FormOrder/FormOrder.js","components/Order/Order.js","pages/UserPage/Pages/Cart/Cart.js"],"sourcesContent":["import * as React from 'react';\nconst IconBasket = ({ stroke, ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    viewBox=\"0 1 23 23\"\n    fill=\"none\"\n    {...props}\n  >\n    <g\n      stroke={stroke || '#fff'}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      clipPath=\"url(#a)\"\n    >\n      <path d=\"M4 7h16M10 11v6M14 11v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3\" />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nexport default IconBasket;\n","const FormOrder = () => {\n  return <p>FormOrder</p>;\n};\n\nexport default FormOrder;\n","import FormOrder from 'components/Forms/FormOrder/FormOrder';\nimport IconBasket from 'images/icons/IconBasket';\nimport { useState } from 'react';\n\nconst api = require('../../api');\n\nconst Order = ({ order, handleRemoveOrder }) => {\n  const [items, setItems] = useState(order.items);\n\n  const handleIncrement = ({ _id: productId, quantity }) => {\n    api\n      .setQuantity({ productId, quantity: quantity + 1 })\n      .then(({ updatedItem }) => {\n        setItems(prevItems =>\n          prevItems.map(item =>\n            item._id === updatedItem._id ? updatedItem : item\n          )\n        );\n      });\n  };\n\n  const handleDecrement = ({ _id: productId, quantity }) => {\n    if (quantity > 1) {\n      api\n        .setQuantity({ productId, quantity: quantity - 1 })\n        .then(({ updatedItem }) => {\n          setItems(prevItems =>\n            prevItems.map(item =>\n              item._id === updatedItem._id ? updatedItem : item\n            )\n          );\n        });\n    }\n  };\n\n  const handleRemove = productId => {\n    if (items.length === 1) {\n      handleRemoveOrder();\n    } else {\n      api\n        .removeProductFromOrder(order._id, productId)\n        .then(data =>\n          setItems(prefItems =>\n            prefItems.filter(item => item._id !== productId)\n          )\n        );\n    }\n  };\n\n  return (\n    <div>\n      <h2>Оформлення замовлення {`( ${items[0].serviceType} )`}</h2>\n\n      <div>\n        {items.map(item => {\n          return (\n            <div key={item._id}>\n              <div>\n                <img\n                  width=\"150px\"\n                  height=\"150px\"\n                  src={item.product.photos[0].path}\n                  alt=\"product\"\n                />\n                <div>\n                  <p>Продавець: {item.owner.nickname}</p>\n                  <p>{item.product.name}</p>\n                </div>\n              </div>\n              <div>\n                <p>{item.price}</p>\n                <button onClick={() => handleIncrement(item)}>+</button>\n                <p>{item.quantity}</p>\n                <button\n                  disabled={item.quantity === 1}\n                  onClick={() => handleDecrement(item)}\n                >\n                  -\n                </button>\n                <p>{item.price * item.quantity}</p>\n                <button onClick={() => handleRemove(item._id)}>\n                  <IconBasket stroke={'#000'} />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <FormOrder />\n    </div>\n  );\n};\n\nexport default Order;\n","import Order from 'components/Order/Order';\nimport { useEffect, useState } from 'react';\n\nconst api = require('../../../../api');\n\nconst Cart = () => {\n  const [orders, setOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [totalOrders, setTotalOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [isLoading, setIsLoading] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState([]);\n\n  useEffect(() => {\n    api\n      .getOrders()\n      .then(data => {\n        setOrders(data.orders);\n        setTotalOrders(data.totalOrders);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleRemoveOrder = orderId => {\n    api.removeOrder(orderId).then(({ message }) => {\n      message === 'Order successfully removed' &&\n        setOrders(prefOrders =>\n          prefOrders.filter(item => item._id !== orderId)\n        );\n    });\n  };\n\n  return !orders.length ? (\n    <p>Ваш кошик поки пустий</p>\n  ) : (\n    <>\n      {orders.map(order => (\n        <Order\n          handleRemoveOrder={() => handleRemoveOrder(order._id)}\n          key={order._id}\n          order={order}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Cart;\n"],"names":["_ref","stroke","props","_jsxs","xmlns","width","height","viewBox","fill","children","_jsx","strokeLinecap","strokeLinejoin","strokeWidth","clipPath","d","id","FormOrder","api","require","order","handleRemoveOrder","items","setItems","useState","concat","serviceType","map","item","src","product","photos","path","alt","owner","nickname","name","price","onClick","_ref2","_id","productId","quantity","setQuantity","then","_ref3","updatedItem","prevItems","handleIncrement","disabled","_ref4","_ref5","handleDecrement","handleRemove","length","removeProductFromOrder","data","prefItems","filter","IconBasket","Cart","orders","setOrders","totalOrders","setTotalOrders","isLoading","setIsLoading","error","setError","useEffect","getOrders","catch","_Fragment","Order","orderId","removeOrder","message","prefOrders"],"sourceRoot":""}