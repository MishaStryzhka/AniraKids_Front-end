{"version":3,"file":"static/js/126.1a0c09d9.chunk.js","mappings":"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","sources":["components/Button/Button.js","components/Button/Button.styled.js","components/NavigationOverlay/NavigationOverlay.styled.js","components/SectionAboutAniraK/SectionAboutAniraK.styled.js","components/SectionAnswers/SectionAnswers.styled.js","helpers/cropImage.js","helpers/index.js","images/icons/IconPencil.js","pages/UserPage/Pages/Profile/Profile.styled.js","components/CropperWrap/CropperWrap.styled.js","components/Modals/ModalLogOut/ModalLogOut.styled.js","components/CropperWrap/CropperWrap.js","components/Modals/ModalAddAvatar/ModalAddAvatar.js","components/Modals/ModalChangePhoneNumber/ModalChangePhoneNumber.syled.js","components/Modals/ModalChangePhoneNumber/ModalChangePhoneNumber.js","components/Modals/ModalChangeEmail/ModalChangeEmail.styled.js","components/Modals/ModalChangeEmail/ModalChangeEmail.js","components/Forms/FormBillingDetails/FormBillingDetails.styled.js","components/Forms/FormBillingDetails/FormBillingDetails.js","components/Forms/FormBankAccount/FormBankAccount.js","components/Modals/ModalBecomeLandlord/ModalBecomeLandlord.js","pages/UserPage/Pages/Profile/Profile.js"],"sourcesContent":["import { StyleButton } from './Button.styled';\n\nconst Button = ({\n  children,\n  type = 'submit',\n  onClick,\n  disabled = false,\n  className,\n  style,\n  ariaLabel,\n}) => {\n  return (\n    <StyleButton\n      style={style}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n      className={className}\n      aria-label={ariaLabel}\n    >\n      {children}\n    </StyleButton>\n  );\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const StyleButton = styled.button`\n  padding: 14px 40px;\n  width: 304px;\n  border: none;\n  border-radius: 2px;\n  cursor: pointer;\n\n  text-align: center;\n\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.43;\n  text-transform: uppercase;\n\n  color: ${({ theme }) => theme.color.mainColor1};\n  background-color: ${({ theme }) => theme.color.btnColorBG};\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.mainColor3};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.color.mainColor3};\n    color: ${({ theme }) => theme.color.mainColor5};\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TabBar = styled.div`\n  position: relative;\n`;\n\nexport const NavigationWrapper = styled.div`\n  padding-top: 24px;\n  display: flex;\n  gap: 4px;\n  align-items: center;\n`;\n\nexport const SecondBox = styled.div``;\n\nexport const StyledNavLink = styled(NavLink)`\n  color: ${({ theme }) => theme.color.mainColor5};\n  text-align: center;\n\n  font-family: 'Open Sans', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px; /* 142.857% */\n  text-decoration-line: none;\n  padding: 8px 4px;\n  @media screen and (min-width: 1280px) {\n    padding: 8px 16px;\n  }\n\n  &.active {\n    ${({ $notActive }) => !$notActive && 'font-weight: 700;'}\n  }\n`;\n\nexport const StyledSecondButton = styled(NavLink)`\n  ${({ to }) => to && 'position: absolute; right: 0; top: 24px;'}\n\n  box-sizing: border-box;\n  width: 305px;\n  padding: 14px 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 2px;\n  border: 1px solid ${({ theme }) => theme.color.mainColor3};\n\n  color: ${({ theme }) => theme.color.mainColor3};\n  text-align: center;\n\n  font-family: Open Sans, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 20px; /* 142.857% */\n\n  text-decoration: none;\n`;\n\nexport const MenuButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  background: transparent;\n\n  padding: 0 6px;\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 64px 0;\n  @media screen and (min-width: 768px) {\n    padding: 72px 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 96px 0;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-family: 'Cormorant SC';\n  font-size: 32px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-bottom: 16px;\n\n  color: ${({ theme }) => theme.color.mainColor4};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 48px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  /* flex-basis: calc((100% - 80px) / 5); */\n  width: 100%;\n`;\n\nexport const WrapIcon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AddWrap = styled.div`\n  margin: 12px 0;\n`;\n\nexport const TitleDescription = styled.h3`\n  text-align: center;\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  margin: 16px 0 8px 0;\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n\nexport const Description = styled.p`\n  max-width: 240px;\n  text-align: center;\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.43;\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n\nexport const WrapButton = styled.div`\n  width: 305px;\n  margin: 0 auto;\n`;\n\nexport const PaginationContainer = styled.div`\n  width: 150px;\n  height: 20px;\n  border: 1px solid black;\n  background-color: brown;\n  /* Стилі для контейнера точок пагінації */\n  .swiper-pagination-bullet {\n    width: 50px;\n    height: 20px;\n    background-color: brown;\n  }\n`;\n","import IconArrow from 'images/icons/IconArrow';\nimport styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 72px;\n  padding-bottom: 80px;\n  @media screen and (min-width: 1280px) {\n    padding-top: 120px;\n    padding-bottom: 160px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-family: 'Cormorant SC';\n  font-size: 32px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n    line-height: 1.17;\n  }\n\n  color: ${({ theme }) => theme.color.mainColor4};\n`;\n\nexport const ListQ = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n  @media screen and (min-width: 768px) {\n    margin: 0 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: 0;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-direction: column;\n  @media screen and (min-width: 1280px) {\n    width: 846px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  /* justify-content: space-between; */\n  border-bottom: 1px solid;\n\n  border-color: ${({ theme }) => theme.color.additionalColorBrown};\n`;\n\nexport const StyledIconArrowUp = styled(IconArrow)`\n  transform: ${({ $openAnswer }) =>\n    $openAnswer ? 'rotate(270deg)' : 'rotate(90deg)'};\n  cursor: pointer;\n`;\n\nexport const QuestionDescription = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.4;\n  letter-spacing: 0.02px;\n  width: 316px;\n  @media screen and (min-width: 768px) {\n    width: 616px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 774px;\n  }\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n\nexport const AnswerDescription = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.43;\n  padding: 16px;\n\n  @media screen and (min-width: 1280px) {\n    width: 814px;\n  }\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n","const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', error => reject(error));\n    image.setAttribute('crossOrigin', 'anonymus');\n    image.src = url;\n  });\n\nconst getRadianAngle = degreeValue => {\n  return (degreeValue * Math.PI) / 180;\n};\n\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  );\n\n  return canvas;\n}\n\nexport const generateDownload = async (imageSrc, crop) => {\n  if (!crop || !imageSrc) {\n    return;\n  }\n\n  const canvas = await getCroppedImg(imageSrc.crop);\n\n  console.log('canvas', canvas);\n};\n","const { default: getCroppedImg } = require('./cropImage');\nconst { detectLanguageFromStore } = require('./detectLanguageFromStore');\n\nmodule.exports = {\n  getCroppedImg,\n  detectLanguageFromStore,\n};\n","import * as React from 'react';\nconst IconPencil = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    width={18}\n    height={18}\n    viewBox=\"-1 1 23 23\"\n    {...props}\n  >\n    <g\n      stroke=\"#fff\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      clipPath=\"url(#a)\"\n    >\n      <path d=\"M4 20h4L18.5 9.5a2.828 2.828 0 0 0-4-4L4 16v4ZM13.5 6.5l4 4\" />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nexport default IconPencil;\n","import Button from 'components/Button/Button';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ProfileForm = styled(Form)`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 40px;\n  justify-content: space-evenly;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 0;\n  }\n`;\n\nexport const Wrap = styled.div`\n  width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const SecondWrap = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n  @media screen and (min-width: 1280) {\n    gap: 64px;\n  }\n`;\n\nexport const AvatarLabel = styled.div`\n  width: 197px;\n  display: flex;\n  gap: 8px;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const AvatarWrap = styled.label`\n  cursor: pointer;\n  overflow: hidden;\n  border-radius: 100%;\n`;\nexport const Avatar = styled.img``;\nexport const AvaterTitle = styled.p``;\nexport const AvatarDescription = styled.p`\n  font-family: 'Open Sans Hebrew', sans-serif;\n  text-align: center;\n  font-size: 10px;\n  line-height: 1.8;\n  letter-spacing: 0.01px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\nexport const Placeholder = styled.p`\n  color: ${({ theme }) => theme.color.mainColor5};\n  font-family: Open Sans, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 20px; /* 142.857% */\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 8px 0;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const InputText = styled.p`\n  font-family: Open Sans, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px; /* 142.857% */\n`;\n\nexport const ButtonEdit = styled.button`\n  padding: 0;\n  background-color: transparent;\n  border: none;\n\n  display: flex;\n`;\n\nexport const ButtonShow = styled.button`\n  padding: 0;\n  background-color: transparent;\n  border: none;\n\n  display: flex;\n\n  position: absolute;\n  right: 8px;\n  bottom: 8px;\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 0 auto;\n`;\n\nexport const WrapperBiling = styled.div`\n  padding: 8px;\n  border-bottom: 1px solid;\n\n  border-color: ${({ theme }) => theme.color.additionalColorBrown};\n`;\n","import { styled } from 'styled-components';\n\nexport const PreviewBox = styled.div`\n  position: relative;\n\n  ${({ width, height }) =>\n    width > 300\n      ? `width: ${(400 / height) * width}px; height: 400px;`\n      : `height: ${(300 / width) * height}px; width: 300px;`}\n\n  margin: auto;\n`;\n\nexport const PreviewButtonWraper = styled.div`\n  display: flex;\n  column-gap: 80px;\n  justify-content: center;\n  align-items: center;\n`;\n","import IconCross from 'images/icons/IconCross';\nimport styled from 'styled-components';\n\nexport const ModalWindow = styled.div`\n  width: 358px;\n  display: flex;\n  padding: 16px;\n  gap: 16px;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    padding: 24px;\n    gap: 24px;\n    width: 372px;\n  }\n  background-color: ${({ theme }) => theme.color.mainColor1};\n`;\n\nexport const StyledIconCross = styled(IconCross)`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    top: 24px;\n    right: 24px;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  text-align: center;\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.4;\n  letter-spacing: 0.02px;\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n\nexport const ButtonBack = styled.button`\n  padding: 14px 40px;\n  width: 304px;\n  border: none;\n  border-radius: 2px;\n  cursor: pointer;\n  text-align: center;\n\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.43;\n  text-transform: uppercase;\n\n  color: ${({ theme }) => theme.color.mainColor5};\n  background-color: ${({ theme }) => theme.color.additionalColorGray};\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useAuth } from 'hooks';\nimport { useState, useCallback, useEffect } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { PreviewBox, PreviewButtonWraper } from './CropperWrap.styled';\nimport { getCroppedImg } from 'helpers';\nimport { ButtonBack } from 'components/Modals/ModalLogOut/ModalLogOut.styled';\nimport Button from 'components/Button/Button';\n\nconst CropperWrap = ({ image, name, setImage, onClose }) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedArea, setCroppedArea] = useState(null);\n  const [avatarWidth, setAvatarWidth] = useState(300);\n  const [avatarHeight, setAvatarHeight] = useState(400);\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageBase64, setImageBase64] = useState(null);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (image) {\n      const img = document.createElement('img');\n      img.src = URL.createObjectURL(image);\n      img.onload = function () {\n        setAvatarWidth(img.width);\n        setAvatarHeight(img.height);\n      };\n\n      const reader = new FileReader();\n      reader.readAsDataURL(image);\n      reader.addEventListener('load', () => {\n        setImageBase64(reader.result);\n      });\n    }\n  }, [image]);\n\n  const onCropComplete = useCallback(\n    (croppedArea, croppedAreaPixels) => {\n      setCroppedArea(croppedAreaPixels);\n    },\n    [setCroppedArea]\n  );\n\n  const hendleSave = async () => {\n    setIsLoading(true);\n    const canvas = await getCroppedImg(URL.createObjectURL(image), croppedArea);\n\n    canvas.toBlob(blob => {\n      const file = new File([blob], `${user.userID}-${name}`, {\n        type: image.type,\n      });\n\n      setImage(file);\n    });\n    setIsLoading(false);\n    onClose();\n  };\n\n  if (!imageBase64) {\n    return;\n  }\n\n  return (\n    <>\n      <PreviewBox width={avatarWidth} height={avatarHeight}>\n        <Cropper\n          image={imageBase64}\n          crop={crop}\n          zoom={zoom}\n          aspect={3 / 3}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n          zoomSpeed={0.1}\n        />\n      </PreviewBox>\n      <PreviewButtonWraper style={{ marginTop: 24 }}>\n        <ButtonBack\n          onClick={() => {\n            onClose();\n          }}\n        >\n          Скасувати\n        </ButtonBack>\n        <Button\n          type=\"button\"\n          disabled={isLoading}\n          onClick={e => {\n            hendleSave(e);\n          }}\n        >\n          Зберегти\n        </Button>\n      </PreviewButtonWraper>\n    </>\n  );\n};\n\nexport default CropperWrap;\n","import CropperWrap from 'components/CropperWrap/CropperWrap';\nimport { useTranslation } from 'react-i18next';\n\nconst { ModalTitle, GeneralModalWindow } = require('../Modal.styled');\n\nconst ModalAddAvatar = ({ avatar, setFieldValue, setIsOpenModalAddAvatar }) => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.modalAddAvatar',\n  });\n  return (\n    <GeneralModalWindow>\n      <ModalTitle type=\"modal\">{t('Add profile picture')}</ModalTitle>\n\n      <CropperWrap\n        image={avatar}\n        name=\"avatar\"\n        setImage={e => setFieldValue('avatarUrl', e)}\n        onClose={() => {\n          document.body.style.overflow = 'auto';\n          setIsOpenModalAddAvatar(false);\n        }}\n      />\n    </GeneralModalWindow>\n  );\n};\n\nexport default ModalAddAvatar;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  position: relative;\n  width: 348px;\n  gap: 16px;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    gap: 24px;\n  }\n`;\n\nexport const Label = styled.label`\n  width: 305px;\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    width: inherit;\n  }\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n","import Button from 'components/Button/Button';\nimport { Form, Label } from './ModalChangePhoneNumber.syled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { updateUserInfo } from '../../../redux/auth/operations';\nimport { validPhoneNumberScheme } from 'schemas';\nimport { useTranslation } from 'react-i18next';\nimport {\n  GeneralModalWindow,\n  InputModal,\n  ModalTitle,\n  StyledIconCross,\n} from '../Modal.styled';\n\nconst ModalChangePhoneNumber = ({ onClick }) => {\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.modalChangePhoneNumber',\n  });\n\n  const handlePhoneNumberSubmit = values => {\n    const { primaryPhoneNumber } = values;\n\n    console.log(values);\n    dispatch(updateUserInfo({ primaryPhoneNumber }));\n  };\n  return (\n    <GeneralModalWindow>\n      <Formik\n        initialValues={{\n          primaryPhoneNumber: '',\n        }}\n        validationSchema={validPhoneNumberScheme}\n        onSubmit={handlePhoneNumberSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <StyledIconCross\n              onClick={() => {\n                document.body.style.overflow = 'auto';\n                onClick();\n              }}\n            />\n            <ModalTitle>{t('changePhoneNumber')}</ModalTitle>\n            <Label>\n              {t('phoneNumber')}\n              <InputModal\n                type=\"tel\"\n                name=\"primaryPhoneNumber\"\n                onChange={e => handleChange(e)}\n                value={values.primaryPhoneNumber}\n                required\n                placeholder=\"+380\"\n              />\n              <p>\n                {errors.primaryPhoneNumber &&\n                  touched.primaryPhoneNumber &&\n                  errors.primaryPhoneNumber}\n              </p>\n            </Label>\n            <Button type=\"submit\">{t('saveButton')}</Button>\n          </Form>\n        )}\n      </Formik>\n    </GeneralModalWindow>\n  );\n};\n\nexport default ModalChangePhoneNumber;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 16px;\n  width: 348px;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    gap: 24px;\n  }\n`;\n\nexport const LabelModal = styled.label`\n  width: 305px;\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    width: inherit;\n  }\n\n  color: ${({ theme }) => theme.color.mainColor5};\n`;\n","import Button from 'components/Button/Button';\nimport { Form, LabelModal } from './ModalChangeEmail.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { updateUserEmail } from '../../../redux/auth/operations';\nimport { validUpdateEmailScheme } from 'schemas';\nimport { useAuth } from 'hooks';\nimport { BeatLoader } from 'react-spinners';\nimport {\n  GeneralModalWindow,\n  InputModal,\n  ModalTitle,\n  StyledIconCross,\n  TextDone,\n} from '../Modal.styled';\nimport { clearDone, clearError } from '../../../redux/auth/slice';\nimport { useEffect } from 'react';\nimport { WrapButton } from '../ModalRegister/ModalRegister.styled';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorMessage } from 'components/Forms/Form.styled';\n\nconst ModalChangeEmail = ({ onClick }) => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.modalChangeEmail',\n  });\n  const { isLoading, error, isDone } = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    isDone &&\n      setTimeout(() => {\n        dispatch(clearDone());\n        document.body.style.overflow = 'auto';\n        onClick();\n      }, 5000);\n  }, [dispatch, isDone, onClick]);\n\n  const handleSubmitEmail = async ({ email }) => {\n    dispatch(clearError());\n    await dispatch(updateUserEmail({ email }));\n  };\n\n  return (\n    <GeneralModalWindow>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={validUpdateEmailScheme}\n        onSubmit={handleSubmitEmail}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return isDone ? (\n            <TextDone>\n              {t('changeEmailMessage', { email: values.email })}\n            </TextDone>\n          ) : (\n            <Form onSubmit={handleSubmit}>\n              <StyledIconCross\n                onClick={() => {\n                  document.body.style.overflow = 'auto';\n                  onClick();\n                }}\n              />\n              <ModalTitle>{t('changeEmailTitle')}</ModalTitle>\n              <LabelModal>\n                {t('enterEmailLabel')}\n                <InputModal\n                  value={values.email}\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={e => {\n                    // console.log(e.target.value);\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"exsample@gmail.com\"\n                />\n                <ErrorMessage>\n                  {(errors.email && touched.email && errors.email) ||\n                    (error?.message === 'Email in use' && t('Email in use'))}\n                </ErrorMessage>\n              </LabelModal>\n              <WrapButton>\n                <Button type=\"submit\">\n                  {!isLoading ? t('saveButton') : <BeatLoader color=\"#fff\" />}\n                </Button>\n              </WrapButton>\n            </Form>\n          );\n        }}\n      </Formik>\n    </GeneralModalWindow>\n  );\n};\n\nexport default ModalChangeEmail;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n`;\n\nexport const WrapInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const ButtonLabel = styled.label`\n  cursor: pointer;\n\n  text-align: center;\n  font-family: 'Open Sans Hebrew', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.43;\n  padding: 8px;\n  background-color: transparent;\n  border: 1px ${({ $active }) => ($active ? 'solid' : 'dashed')};\n  border-radius: 2px;\n  text-transform: uppercase;\n\n  color: ${({ theme }) => theme.color.mainColor2};\n  border-color: ${({ theme, $active }) =>\n    $active ? theme.color.mainColor2 : theme.color.additionalColorBrown};\n`;\n","import { validationBillingDetailsScheme } from 'schemas';\nimport {\n  ButtonLabel,\n  StyledForm,\n  WrapInput,\n} from './FormBillingDetails.styled';\nimport { InputModal, LabelModal } from 'components/Modals/Modal.styled';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorMessage } from '../Form.styled';\nimport { WrapButton } from 'components/Modals/ModalRegister/ModalRegister.styled';\nimport Button from 'components/Button/Button';\nimport { BeatLoader } from 'react-spinners';\nimport { useDispatch } from 'react-redux';\nimport { updateUserBillingDetails } from '../../../redux/auth/operations';\n\nconst { Formik, Field } = require('formik');\nconst { useAuth } = require('hooks');\n\nconst FormBillingDetails = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.formBillingDetails',\n  });\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    dispatch(updateUserBillingDetails(e));\n  };\n\n  const { user, isLoading } = useAuth();\n\n  return (\n    <Formik\n      initialValues={{\n        name: user?.billingDetails?.name || '',\n        street: user?.billingDetails?.street || '',\n        city: user?.billingDetails?.city || '',\n        zip: user?.billingDetails?.zip || '',\n        сountry: user?.billingDetails?.country || 'Česká republika',\n        companyID: user?.billingDetails?.companyID || '',\n        VATID: user?.billingDetails?.VATID || '',\n        vatMode: user?.billingDetails?.vatMode || 'non_vat_payer',\n      }}\n      validationSchema={validationBillingDetailsScheme}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      }) => {\n        return (\n          <StyledForm id=\"formBillingDetails\" onSubmit={handleSubmit}>\n            <WrapInput>\n              <LabelModal>\n                {t('Name')}*\n                <InputModal\n                  value={values.name}\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"Karina Stryzhka\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.name && touched.name && errors.name}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('Street')}*\n                <InputModal\n                  value={values.street}\n                  type=\"text\"\n                  name=\"street\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"Kytlicka 862/2\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.street && touched.street && errors.street}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('City')}*\n                <InputModal\n                  value={values.city}\n                  type=\"text\"\n                  name=\"city\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"Praha\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.city && touched.city && errors.city}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('ZIP')}*\n                <InputModal\n                  value={values.zip}\n                  type=\"text\"\n                  name=\"zip\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"19000\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.zip && touched.zip && errors.zip}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('Country')}\n                <InputModal\n                  value=\"\"\n                  type=\"text\"\n                  name=\"сountry\"\n                  placeholder=\"Česká republika\"\n                  disabled\n                />\n                <ErrorMessage>\n                  {errors.сountry && touched.сountry && errors.сountry}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal\n                style={{\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Field\n                  style={{ display: 'none' }}\n                  type=\"radio\"\n                  id=\"non_vat_payer\"\n                  name=\"vatMode\"\n                  value=\"non_vat_payer\"\n                />\n                <ButtonLabel\n                  $active={values.vatMode === 'non_vat_payer'}\n                  htmlFor=\"non_vat_payer\"\n                >\n                  {t('NonVATPayer')}\n                </ButtonLabel>\n                <Field\n                  style={{ display: 'none' }}\n                  type=\"radio\"\n                  id=\"identified_person\"\n                  name=\"vatMode\"\n                  value=\"identified_person\"\n                />\n                <ButtonLabel\n                  $active={values.vatMode === 'identified_person'}\n                  htmlFor=\"identified_person\"\n                >\n                  {t('IdentifiedPerson')}\n                </ButtonLabel>\n                <Field\n                  style={{ display: 'none' }}\n                  type=\"radio\"\n                  id=\"vat_payer\"\n                  name=\"vatMode\"\n                  value=\"vat_payer\"\n                />\n                <ButtonLabel\n                  $active={values.vatMode === 'vat_payer'}\n                  htmlFor=\"vat_payer\"\n                >\n                  {t('VATPayer')}\n                </ButtonLabel>\n              </LabelModal>\n\n              <LabelModal>\n                {t('CompanyID')}\n                <InputModal\n                  value={values.companyID}\n                  type=\"text\"\n                  name=\"companyID\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"Praha\"\n                />\n                <ErrorMessage>\n                  {errors.companyID && touched.companyID && errors.companyID}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('VATID')}\n                <InputModal\n                  value={values.VATID}\n                  type=\"text\"\n                  name=\"VATID\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"Praha\"\n                />\n                <ErrorMessage>\n                  {errors.VATID && touched.VATID && errors.VATID}\n                </ErrorMessage>\n              </LabelModal>\n            </WrapInput>\n            <WrapButton>\n              <Button\n                htmlFor=\"formBillingDetails\"\n                type=\"submit\"\n                disabled={isLoading}\n              >\n                {!isLoading ? t('Continue') : <BeatLoader color=\"#fff\" />}\n              </Button>\n            </WrapButton>\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default FormBillingDetails;\n","import { Formik } from 'formik';\nimport { useAuth } from 'hooks';\nimport { useTranslation } from 'react-i18next';\nimport {\n  StyledForm,\n  WrapInput,\n} from '../FormBillingDetails/FormBillingDetails.styled';\nimport { InputModal, LabelModal } from 'components/Modals/Modal.styled';\nimport { ErrorMessage } from '../Form.styled';\nimport { validationBankAccountScheme } from 'schemas';\nimport { WrapButton } from 'components/SectionAboutAniraK/SectionAboutAniraK.styled';\nimport Button from 'components/Button/Button';\nimport { BeatLoader } from 'react-spinners';\nimport { useDispatch } from 'react-redux';\nimport { updateUserBankAccount } from '../../../redux/auth/operations';\n\nconst FormBankAccount = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.formBankAccount',\n  });\n  const dispatch = useDispatch();\n  const { user, isLoading } = useAuth();\n  console.log('user', user);\n\n  const handleSubmit = e => {\n    dispatch(updateUserBankAccount(e));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        accountName: user.bankAccount.accountName || '',\n        accountNumber: user.bankAccount.accountNumber || '',\n        IBAN: user.bankAccount.IBAN || '',\n        swiftBIC: user.bankAccount.swiftBIC || '',\n        currency: 'CZK - Česká republika',\n      }}\n      validationSchema={validationBankAccountScheme}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      }) => {\n        console.log('errors', errors);\n\n        return (\n          <StyledForm onSubmit={handleSubmit}>\n            <WrapInput>\n              <LabelModal>\n                {t('accountName')}*\n                <InputModal\n                  value={values.accountName}\n                  type=\"text\"\n                  name=\"accountName\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"Komerční Banka\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.accountName &&\n                    touched.accountName &&\n                    t(errors.accountName)}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('accountNumber')}*\n                <InputModal\n                  value={values.accountNumber}\n                  type=\"text\"\n                  name=\"accountNumber\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"1234567890/2010\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.accountNumber &&\n                    touched.accountNumber &&\n                    t(errors.accountNumber)}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('IBAN')}*\n                <InputModal\n                  value={values.IBAN}\n                  type=\"text\"\n                  name=\"IBAN\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"CZ6508000000192000145399\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.IBAN && touched.IBAN && t(errors.IBAN)}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('swiftBIC')}*\n                <InputModal\n                  value={values.swiftBIC}\n                  type=\"text\"\n                  name=\"swiftBIC\"\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  placeholder=\"KOMBCZPP\"\n                  required\n                />\n                <ErrorMessage>\n                  {errors.swiftBIC && touched.swiftBIC && t(errors.swiftBIC)}\n                </ErrorMessage>\n              </LabelModal>\n\n              <LabelModal>\n                {t('currency')}\n                <InputModal\n                  value=\"CZK - Česká republika\"\n                  type=\"text\"\n                  name=\"currency\"\n                  placeholder=\"CZK - Česká republika\"\n                  disabled\n                />\n                <ErrorMessage>\n                  {errors.currency && touched.currency && t(errors.currency)}\n                </ErrorMessage>\n              </LabelModal>\n            </WrapInput>\n            <WrapButton>\n              <Button type=\"submit\" disabled={isLoading}>\n                {!isLoading ? t('Continue') : <BeatLoader color=\"#fff\" />}\n              </Button>\n            </WrapButton>\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default FormBankAccount;\n","import { ModalDescription, ModalTitle, ModalWindow } from '../Modal.styled';\nimport { StyledIconCross } from '../ModalLogOut/ModalLogOut.styled';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { clearDone } from '../../../redux/auth/slice';\nimport FormBillingDetails from 'components/Forms/FormBillingDetails/FormBillingDetails';\nimport FormBankAccount from 'components/Forms/FormBankAccount/FormBankAccount';\nimport { useNavigate } from 'react-router-dom';\n\nconst ModalBecomeLandlord = ({ onClick }) => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'components.modalBecomeLandlord',\n  });\n\n  const [step, setStep] = useState('first');\n  const { isDone } = useAuth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  console.log('isDone', isDone);\n\n  useEffect(() => {\n    isDone && setStep('second');\n    step === 'second' && isDone && navigate('/my-account/rent-out');\n    isDone &&\n      setTimeout(() => {\n        dispatch(clearDone());\n      }, 0);\n  }, [dispatch, isDone, navigate, step]);\n\n  return (\n    <ModalWindow width=\"448px\">\n      <StyledIconCross\n        onClick={() => {\n          document.body.style.overflow = 'auto';\n          onClick();\n        }}\n      />\n      {step === 'first' && (\n        <>\n          <ModalTitle>{t('becomeLandlord')}</ModalTitle>\n          <ModalDescription>{t('fillBillingDetails')}</ModalDescription>\n          <FormBillingDetails />\n        </>\n      )}\n      {step === 'second' && (\n        <>\n          <ModalTitle>Nový bankovní účet</ModalTitle>\n          <FormBankAccount />\n        </>\n      )}\n    </ModalWindow>\n  );\n};\n\nexport default ModalBecomeLandlord;\n","import { Field, Formik } from 'formik';\nimport { validationProfileSchema } from 'schemas';\nimport {\n  Avatar,\n  AvatarDescription,\n  AvatarLabel,\n  AvatarWrap,\n  ButtonEdit,\n  ButtonShow,\n  InputText,\n  Label,\n  Placeholder,\n  ProfileForm,\n  SecondWrap,\n  StyledButton,\n  Wrap,\n  Wrapper,\n  WrapperBiling,\n} from './Profile.styled';\nimport AvatarImage from 'images/photo-plug.jpg';\nimport { useEffect, useState } from 'react';\nimport Modal from 'components/Modals/Modal';\nimport ModalAddAvatar from 'components/Modals/ModalAddAvatar/ModalAddAvatar';\nimport { useAuth } from 'hooks';\nimport { ErrorMessage, InputField } from 'components/Forms/Form.styled';\nimport ModalChangePhoneNumber from 'components/Modals/ModalChangePhoneNumber/ModalChangePhoneNumber';\nimport IconPencil from 'images/icons/IconPencil';\nimport ModalChangeEmail from 'components/Modals/ModalChangeEmail/ModalChangeEmail';\nimport IconEyeOpen from 'images/icons/IconEyeOpen';\nimport IconEyeClosed from 'images/icons/IconEyeClosed';\nimport theme from 'components/theme';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateUserInfo,\n  verifiedEmail,\n} from '../../../../redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\nimport { StyledSecondButton } from 'components/NavigationOverlay/NavigationOverlay.styled';\nimport ModalBecomeLandlord from 'components/Modals/ModalBecomeLandlord/ModalBecomeLandlord';\nimport { BeatLoader } from 'react-spinners';\nimport {\n  QuestionDescription,\n  StyledIconArrowUp,\n} from 'components/SectionAnswers/SectionAnswers.styled';\nimport FormBillingDetails from 'components/Forms/FormBillingDetails/FormBillingDetails';\nimport FormBankAccount from 'components/Forms/FormBankAccount/FormBankAccount';\nimport { clearDone } from '../../../../redux/auth/slice';\nimport { TextDone } from 'components/Modals/Modal.styled';\n\nconst Profile = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'pages.userPage.profilePage',\n  });\n  const { user, currentTheme, isLoading } = useAuth();\n  let { error, isDone } = useAuth();\n\n  const [avatar, setAvatar] = useState(null);\n  const [isOpenModalAddAvatar, setIsOpenModalAddAvatar] = useState(false);\n  const [isOpenModalChangePhoneNomber, setIsOpenModalChangePhoneNomber] =\n    useState(false);\n  const [isOpenModalChangeEmail, setIsOpenModalChangeEmail] = useState(false);\n  const [isOpenModalBecomeLandlord, setIsOpenModalBecomeLandlord] =\n    useState(false);\n\n  const [isOpenBillingDetails, setIsOpenBillingDetails] = useState(false);\n  const [isOpenBankAccount, setIsOpenBankAccount] = useState(false);\n\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmNewPassword, setShowConfirmNewPassword] = useState(false);\n\n  const [\n    isOpenModalEmailSentSuccessfully,\n    setIsOpenModalEmailSentSuccessfully,\n  ] = useState();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    isDone?.message === 'Email confirmation sent successfully.' &&\n      setIsOpenModalEmailSentSuccessfully(true);\n    isDone &&\n      setTimeout(() => {\n        dispatch(clearDone());\n      }, 5000);\n  }, [dispatch, isDone]);\n\n  const isChangeAvatarUrl = e => {\n    const { files } = e.currentTarget;\n    setAvatar(files[0]);\n    setIsOpenModalAddAvatar(true);\n  };\n\n  const onSubmit = e => {\n    dispatch(updateUserInfo(e));\n  };\n\n  const verifyEmail = () => {\n    dispatch(verifiedEmail());\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: 14 }}>\n      <Formik\n        initialValues={{\n          avatarUrl: user?.avatar || '',\n          firstName: user?.firstName || '',\n          lastName: user?.lastName || '',\n          companyName: user?.companyName || '',\n          nickname: user?.nickname || '',\n          primaryPhoneNumber: '',\n          email: user?.email || '',\n          newPassword: user?.newPassword || '',\n          confirmNewPassword: user?.confirmNewPassword || '',\n          ico: user?.ico || '',\n        }}\n        validationSchema={validationProfileSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          setFieldValue,\n          setTouched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <ProfileForm>\n              <Wrap>\n                <Label>\n                  <Placeholder>{t('lastName')}</Placeholder>\n                  {user?.lastName ? (\n                    <Wrapper>\n                      <InputText>{user?.lastName}</InputText>\n                    </Wrapper>\n                  ) : (\n                    <>\n                      <InputField\n                        type=\"text\"\n                        id=\"lastName\"\n                        value={values.lastName}\n                        name=\"lastName\"\n                        placeholder=\"Каріна\"\n                        onChange={e => {\n                          error = null;\n                          handleChange(e);\n                        }}\n                      />\n                      <ErrorMessage>\n                        {errors?.lastName &&\n                          touched?.lastName &&\n                          t(errors?.lastName)}\n                      </ErrorMessage>\n                    </>\n                  )}\n                </Label>\n\n                <Label>\n                  <Placeholder>{t('firstName')}</Placeholder>\n                  {user?.firstName ? (\n                    <Wrapper>\n                      <InputText>{user?.firstName}</InputText>\n                    </Wrapper>\n                  ) : (\n                    <>\n                      <InputField\n                        type=\"text\"\n                        id=\"firstName\"\n                        value={values.firstName}\n                        name=\"firstName\"\n                        placeholder=\"Стрижка\"\n                        onChange={e => {\n                          error = null;\n                          handleChange(e);\n                        }}\n                      />\n                      <ErrorMessage>\n                        {errors?.firstName &&\n                          touched?.firstName &&\n                          t(errors?.firstName)}\n                      </ErrorMessage>\n                    </>\n                  )}\n                </Label>\n\n                <Label>\n                  <Placeholder>Nickname</Placeholder>\n                  {user?.nickname ? (\n                    <Wrapper>\n                      <InputText>{user?.nickname}</InputText>\n                    </Wrapper>\n                  ) : (\n                    <InputField\n                      type=\"text\"\n                      id=\"nickname\"\n                      value={values.nickname}\n                      name=\"nickname\"\n                      placeholder=\"@karina.s\"\n                      onChange={e => {\n                        e.currentTarget.value =\n                          e.currentTarget.value.replaceAll('@', '').length < 1\n                            ? ''\n                            : `@${e.currentTarget.value.replaceAll('@', '')}`;\n                        error = null;\n                        handleChange(e);\n                      }}\n                    />\n                  )}\n                  <ErrorMessage>\n                    {(errors?.nickname &&\n                      touched?.nickname &&\n                      t(errors?.nickname)) ||\n                      (error?.message === 'Nickname must be unique' &&\n                        t('Nickname must be unique'))}\n                  </ErrorMessage>\n                </Label>\n\n                <Label>\n                  <Placeholder>{t('phoneNumber')}</Placeholder>\n                  {user?.primaryPhoneNumber ? (\n                    <Wrapper>\n                      <InputText>{user?.primaryPhoneNumber}</InputText>\n                      <ButtonEdit\n                        type=\"button\"\n                        title=\"change phone number\"\n                        onClick={() => setIsOpenModalChangePhoneNomber(true)}\n                      >\n                        <IconPencil />\n                      </ButtonEdit>\n                    </Wrapper>\n                  ) : (\n                    <>\n                      <InputField\n                        type=\"text\"\n                        id=\"primaryPhoneNumber\"\n                        value={values.primaryPhoneNumber}\n                        name=\"primaryPhoneNumber\"\n                        placeholder=\"+380\"\n                        onChange={e => {\n                          error = null;\n                          handleChange(e);\n                        }}\n                      />\n                      <ErrorMessage>\n                        {errors?.primaryPhoneNumber &&\n                          touched?.primaryPhoneNumber &&\n                          t(errors?.primaryPhoneNumber)}\n                      </ErrorMessage>\n                    </>\n                  )}\n                  {isOpenModalChangePhoneNomber && (\n                    <Modal\n                      onClick={() => setIsOpenModalChangePhoneNomber(false)}\n                    >\n                      <ModalChangePhoneNumber\n                        onClick={() => setIsOpenModalChangePhoneNomber(false)}\n                      ></ModalChangePhoneNumber>\n                    </Modal>\n                  )}\n                </Label>\n\n                <Label>\n                  <Placeholder>{t('email')}</Placeholder>\n                  {user?.email ? (\n                    <Wrapper>\n                      <InputText>{user?.email}</InputText>\n                      <ButtonEdit\n                        type=\"button\"\n                        title=\"change email\"\n                        onClick={() => setIsOpenModalChangeEmail(true)}\n                      >\n                        <IconPencil />\n                      </ButtonEdit>\n                      {user.emailVerified ? (\n                        <p>{t('verified')}</p>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          title=\"verify email\"\n                          onClick={() => verifyEmail()}\n                          disabled={isLoading}\n                        >\n                          {!isLoading ? (\n                            t('verify')\n                          ) : (\n                            <BeatLoader color=\"#fff\" />\n                          )}\n                        </button>\n                      )}\n                    </Wrapper>\n                  ) : (\n                    <>\n                      <InputField\n                        type=\"email\"\n                        id=\"email\"\n                        value={values.email}\n                        name=\"email\"\n                        placeholder=\"***@gmail.com\"\n                        onChange={e => {\n                          error = null;\n                          handleChange(e);\n                        }}\n                      />\n                      <ErrorMessage>\n                        {(errors?.email &&\n                          touched?.email &&\n                          t(errors?.email)) ||\n                          (error?.message === 'Email in use' &&\n                            t(error?.message))}\n                      </ErrorMessage>\n                    </>\n                  )}\n                  {isOpenModalChangeEmail && (\n                    <Modal onClick={() => setIsOpenModalChangeEmail(false)}>\n                      <ModalChangeEmail\n                        onClick={() => setIsOpenModalChangeEmail(false)}\n                      ></ModalChangeEmail>\n                    </Modal>\n                  )}\n                  {isOpenModalEmailSentSuccessfully && (\n                    <Modal\n                      onClick={() => setIsOpenModalEmailSentSuccessfully(false)}\n                    >\n                      <TextDone>\n                        {t('changeEmailMessage', { email: values.email })}\n                      </TextDone>\n                    </Modal>\n                  )}\n                </Label>\n\n                {user?.isFirstLogin && user?.provider === 'Google' && (\n                  <>\n                    <Label>\n                      <Placeholder>{t('newPassword')}</Placeholder>\n                      <InputField\n                        type={!showNewPassword ? 'password' : 'text'}\n                        id=\"newPassword\"\n                        value={values.newPassword}\n                        name=\"newPassword\"\n                        placeholder=\"********\"\n                        onChange={e => {\n                          error = null;\n                          handleChange(e);\n                        }}\n                      />\n                      {values.newPassword !== '' && (\n                        <ButtonShow\n                          type=\"button\"\n                          title={t('showPassword')}\n                          onClick={() => setShowNewPassword(!showNewPassword)}\n                        >\n                          {!showNewPassword ? (\n                            <IconEyeOpen\n                              fill={theme[currentTheme].color.mainColor2}\n                            />\n                          ) : (\n                            <IconEyeClosed\n                              fill={theme[currentTheme].color.mainColor2}\n                            />\n                          )}\n                        </ButtonShow>\n                      )}\n                    </Label>\n\n                    <Label>\n                      <Placeholder>{t('enterNewPasswordAgain')}</Placeholder>\n                      <InputField\n                        type={!showConfirmNewPassword ? 'password' : 'text'}\n                        id=\"confirmNewPassword\"\n                        value={values.confirmNewPassword}\n                        name=\"confirmNewPassword\"\n                        placeholder=\"********\"\n                        onChange={e => {\n                          error = null;\n                          handleChange(e);\n                        }}\n                      />\n                      {values.confirmNewPassword !== '' && (\n                        <ButtonShow\n                          type=\"button\"\n                          title=\"show password\"\n                          onClick={() =>\n                            setShowConfirmNewPassword(!showConfirmNewPassword)\n                          }\n                        >\n                          {!showConfirmNewPassword ? (\n                            <IconEyeOpen\n                              fill={theme[currentTheme].color.mainColor2}\n                            />\n                          ) : (\n                            <IconEyeClosed\n                              fill={theme[currentTheme].color.mainColor2}\n                            />\n                          )}\n                        </ButtonShow>\n                      )}\n                    </Label>\n                  </>\n                )}\n\n                {((Object.entries(touched).length !== 0 && user.isFirstLogin) ||\n                  touched?.avatarUrl) && (\n                  <StyledButton\n                    type=\"submit\"\n                    title={t('saveChanges')}\n                    disabled={isLoading}\n                  >\n                    {!isLoading ? (\n                      t('saveChanges')\n                    ) : (\n                      <BeatLoader color=\"#fff\" />\n                    )}\n                  </StyledButton>\n                )}\n              </Wrap>\n              <SecondWrap>\n                <AvatarLabel>\n                  <Field\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    id=\"avatarUrl\"\n                    value=\"\"\n                    name=\"avatarUrl\"\n                    onChange={e => {\n                      setTouched({ ...touched, avatarUrl: true });\n                      isChangeAvatarUrl(e);\n                    }}\n                  />\n                  <AvatarWrap $avatar={values.avatarUrl} htmlFor=\"avatarUrl\">\n                    {values.avatarUrl ? (\n                      <Avatar\n                        width={197}\n                        height={197}\n                        src={\n                          typeof values.avatarUrl === 'object'\n                            ? URL.createObjectURL(values.avatarUrl)\n                            : values.avatarUrl\n                        }\n                        alt=\"avatar\"\n                      />\n                    ) : (\n                      <img src={AvatarImage} alt=\"avatar\" />\n                    )}\n                  </AvatarWrap>\n                  <Placeholder>{t('profilePhoto')}</Placeholder>\n                  <AvatarDescription>{t('maxFileSize')}</AvatarDescription>\n                  {isOpenModalAddAvatar && (\n                    <Modal\n                      onClick={() => {\n                        setIsOpenModalAddAvatar(false);\n                      }}\n                    >\n                      <ModalAddAvatar\n                        avatar={avatar}\n                        setFieldValue={setFieldValue}\n                        setIsOpenModalAddAvatar={setIsOpenModalAddAvatar}\n                      />\n                    </Modal>\n                  )}\n                </AvatarLabel>\n                {user.typeUser !== 'owner' && (\n                  <StyledSecondButton\n                    onClick={() => setIsOpenModalBecomeLandlord(true)}\n                  >\n                    {t('BECOME_LANDLORD')}\n                  </StyledSecondButton>\n                )}\n                {isOpenModalBecomeLandlord && (\n                  <Modal\n                    prohibitClosingByBackdrop\n                    onClick={() => setIsOpenModalBecomeLandlord(false)}\n                  >\n                    <ModalBecomeLandlord\n                      onClick={() => setIsOpenModalBecomeLandlord(false)}\n                    ></ModalBecomeLandlord>\n                  </Modal>\n                )}\n              </SecondWrap>\n            </ProfileForm>\n          );\n        }}\n      </Formik>\n      {user.typeUser === 'owner' && (\n        <>\n          <WrapperBiling>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: 14,\n              }}\n            >\n              <QuestionDescription>{'BillingDetails'}</QuestionDescription>\n              <StyledIconArrowUp\n                $openAnswer={isOpenBillingDetails}\n                onClick={() => setIsOpenBillingDetails(!isOpenBillingDetails)}\n              />\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-evenly',\n              }}\n            >\n              {isOpenBillingDetails && <FormBillingDetails />}\n              <div style={{ width: 305 }} />\n            </div>\n          </WrapperBiling>\n          <WrapperBiling>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: 14,\n              }}\n            >\n              <QuestionDescription>{'BankAccount'}</QuestionDescription>\n              <StyledIconArrowUp\n                $openAnswer={isOpenBankAccount}\n                onClick={() => setIsOpenBankAccount(!isOpenBankAccount)}\n              />\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-evenly',\n              }}\n            >\n              {isOpenBankAccount && <FormBankAccount />}\n              <div style={{ width: 305 }} />\n            </div>\n          </WrapperBiling>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["_ref","children","type","onClick","disabled","className","style","ariaLabel","_jsx","StyleButton","styled","button","_templateObject","_taggedTemplateLiteral","theme","color","mainColor1","_ref2","btnColorBG","_ref3","mainColor3","_ref4","_ref5","mainColor5","TabBar","div","NavigationWrapper","_templateObject2","SecondBox","_templateObject3","StyledNavLink","NavLink","_templateObject4","$notActive","StyledSecondButton","_templateObject5","to","MenuButton","_templateObject6","Section","section","Title","h2","mainColor4","List","ul","Item","li","WrapIcon","AddWrap","TitleDescription","h3","_templateObject7","Description","p","_templateObject8","WrapButton","_templateObject9","_templateObject10","ListQ","Wrap","additionalColorBrown","StyledIconArrowUp","IconArrow","$openAnswer","QuestionDescription","AnswerDescription","createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","async","getCroppedImg","imageSrc","pixelCrop","rotation","arguments","length","undefined","canvas","document","createElement","ctx","getContext","safeArea","max","width","height","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","x","y","generateDownload","crop","console","log","default","require","detectLanguageFromStore","module","exports","props","_jsxs","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","clipPath","d","id","ProfileForm","Form","SecondWrap","AvatarLabel","AvatarWrap","label","Avatar","img","AvatarDescription","Label","Placeholder","Wrapper","_templateObject11","InputText","_templateObject12","ButtonEdit","_templateObject13","ButtonShow","_templateObject14","StyledButton","Button","_templateObject15","WrapperBiling","_templateObject16","PreviewBox","concat","PreviewButtonWraper","StyledIconCross","IconCross","ButtonBack","additionalColorGray","name","setImage","onClose","setCrop","useState","zoom","setZoom","croppedArea","setCroppedArea","avatarWidth","setAvatarWidth","avatarHeight","setAvatarHeight","isLoading","setIsLoading","imageBase64","setImageBase64","user","useAuth","useEffect","URL","createObjectURL","onload","reader","FileReader","readAsDataURL","result","onCropComplete","useCallback","croppedAreaPixels","_Fragment","Cropper","aspect","onCropChange","onZoomChange","zoomSpeed","marginTop","e","toBlob","blob","file","File","userID","hendleSave","ModalTitle","GeneralModalWindow","avatar","setFieldValue","setIsOpenModalAddAvatar","t","useTranslation","keyPrefix","CropperWrap","body","overflow","form","dispatch","useDispatch","Formik","initialValues","primaryPhoneNumber","validationSchema","validPhoneNumberScheme","onSubmit","values","updateUserInfo","errors","touched","handleChange","handleBlur","handleSubmit","InputModal","onChange","value","required","placeholder","LabelModal","isDone","setTimeout","clearDone","email","validUpdateEmailScheme","clearError","updateUserEmail","TextDone","onBlur","ErrorMessage","message","BeatLoader","StyledForm","WrapInput","ButtonLabel","$active","mainColor2","Field","FormBillingDetails","_user$billingDetails","_user$billingDetails2","_user$billingDetails3","_user$billingDetails4","_user$billingDetails5","_user$billingDetails6","_user$billingDetails7","_user$billingDetails8","billingDetails","street","city","zip","сountry","country","companyID","VATID","vatMode","validationBillingDetailsScheme","updateUserBillingDetails","flexDirection","justifyContent","display","htmlFor","FormBankAccount","accountName","bankAccount","accountNumber","IBAN","swiftBIC","currency","validationBankAccountScheme","updateUserBankAccount","step","setStep","navigate","useNavigate","ModalWindow","ModalDescription","Profile","currentTheme","setAvatar","isOpenModalAddAvatar","isOpenModalChangePhoneNomber","setIsOpenModalChangePhoneNomber","isOpenModalChangeEmail","setIsOpenModalChangeEmail","isOpenModalBecomeLandlord","setIsOpenModalBecomeLandlord","isOpenBillingDetails","setIsOpenBillingDetails","isOpenBankAccount","setIsOpenBankAccount","showNewPassword","setShowNewPassword","showConfirmNewPassword","setShowConfirmNewPassword","isOpenModalEmailSentSuccessfully","setIsOpenModalEmailSentSuccessfully","gap","avatarUrl","firstName","lastName","companyName","nickname","newPassword","confirmNewPassword","ico","validationProfileSchema","_error","_error2","_error3","setTouched","InputField","currentTarget","replaceAll","title","IconPencil","Modal","ModalChangePhoneNumber","emailVerified","verifiedEmail","ModalChangeEmail","isFirstLogin","provider","IconEyeClosed","IconEyeOpen","Object","entries","files","isChangeAvatarUrl","$avatar","alt","ModalAddAvatar","typeUser","prohibitClosingByBackdrop","ModalBecomeLandlord","marginBottom"],"sourceRoot":""}