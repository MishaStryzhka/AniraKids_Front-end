{"version":3,"file":"static/js/287.cd3c0d3d.chunk.js","mappings":"qYA6BA,MAoFA,EApFiBA,KACf,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,IAAe,cAAe,CAC1CC,UAAW,mBAEPC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,KAAEC,IAASC,EAAAA,EAAAA,WAIjB,OAFAC,EAAAA,EAAAA,UAAS,yCAGPC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAC,SAAA,EACRF,EAAAA,EAAAA,MAAA,OACEG,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,YACZJ,SAAA,EAEFK,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,KAClBD,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CAAAP,SACe,yBAAtBP,EAASe,WACRV,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAACC,GAAG,mCAAkCV,SAAA,CAC7CZ,EAAE,cAAc,KAACiB,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,aAMnCb,EAAAA,EAAAA,MAACc,EAAAA,EAAe,CAAAZ,SAAA,EACdF,EAAAA,EAAAA,MAACe,EAAAA,EAAO,CAAAb,SAAA,EACNF,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,YAAWV,SAAA,EAC3BK,EAAAA,EAAAA,KAACU,EAAAA,EAAU,IACV3B,EAAE,eAELU,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,SAAQV,SAAA,EACxBK,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,IAAG,IAAE5B,EAAE,YAElBU,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,aAAYV,SAAA,EAC5BK,EAAAA,EAAAA,KAACY,EAAAA,EAAS,IACT7B,EAAE,eAEc,UAAlBO,EAAKuB,WACJpB,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,aAAYV,SAAA,EAC5BK,EAAAA,EAAAA,KAACc,EAAAA,EAAS,IAAG,IAAE/B,EAAE,eAGrBU,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,YAAWV,SAAA,EAC3BK,EAAAA,EAAAA,KAACe,EAAAA,EAAU,IACVhC,EAAE,cAELU,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,cAAaV,SAAA,EAC7BK,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,IACRjC,EAAE,kBAEc,UAAlBO,EAAKuB,WACJpB,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,iBAAgBV,SAAA,EAChCK,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,IAAG,IAAElC,EAAE,eAGxBU,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,WAAUV,SAAA,EAC1BK,EAAAA,EAAAA,KAACkB,EAAAA,EAAQ,IAAG,IAAEnC,EAAE,cAElBU,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAACJ,GAAG,SAAQV,SAAA,EACxBK,EAAAA,EAAAA,KAACmB,EAAAA,GAAa,IAAG,IAAEpC,EAAE,cAEvBU,EAAAA,EAAAA,MAAC2B,EAAAA,GAAY,CACXC,KAAK,SACLC,MAAOvC,EAAE,UACTwC,QAASA,IAAMrC,GAASsC,EAAAA,EAAAA,WAAU7B,SAAA,EAElCK,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,IACR1C,EAAE,iBAGPiB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CAAA/B,UACVK,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,WAGD,C","sources":["pages/UserPage/UserPage.js"],"sourcesContent":["import { Container } from 'components/Container/Container';\nimport MainContent from 'components/MainContent/MainContent';\nimport NavigationOverlay from 'components/NavigationOverlay/NavigationOverlay';\nimport SideBar from 'components/SideBar/SideBar';\nimport WrapMainContent from 'components/WrapMainContent/WrapMainContent';\nimport { useAuth, useTitle } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { logOut } from '../../redux/auth/operations';\nimport {\n  SecondBox,\n  // SecondBox,\n  StyledButton,\n  StyledIconBag,\n  StyledNavLink,\n} from './UserPage.styled';\nimport IconPerson from 'images/icons/IconPerson';\nimport IconChat from 'images/icons/IconChat';\nimport IconHeart from 'images/icons/IconHeart';\nimport IconCloth from 'images/icons/IconCloth';\nimport IconHanger from 'images/icons/IconHanger';\nimport IconBag2 from 'images/icons/IconBag2';\nimport IconShopCart from 'images/icons/IconShopCart';\nimport IconCard from 'images/icons/IconCard';\nimport IconExit from 'images/icons/IconExit';\nimport { useTranslation } from 'react-i18next';\nimport IconPlus from 'images/icons/IconPlus';\nimport ButtonAdd from 'components/Buttons/ButtonAdd/ButtonAdd';\n\nconst UserPage = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'pages.userPage',\n  });\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const { user } = useAuth();\n\n  useTitle('Акаунт');\n\n  return (\n    <Container>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'baseline',\n        }}\n      >\n        <NavigationOverlay />\n        <SecondBox>\n          {location.pathname === '/my-account/rent-out' && (\n            <ButtonAdd to=\"/my-account/rent-out/add-product\">\n              {t('addProduct')} <IconPlus />\n            </ButtonAdd>\n          )}\n        </SecondBox>\n      </div>\n\n      <WrapMainContent>\n        <SideBar>\n          <StyledNavLink to=\"./profile\">\n            <IconPerson />\n            {t('profile')}\n          </StyledNavLink>\n          <StyledNavLink to=\"./chat\">\n            <IconChat /> {t('chat')}\n          </StyledNavLink>\n          <StyledNavLink to=\"./favorite\">\n            <IconHeart />\n            {t('favorite')}\n          </StyledNavLink>\n          {user.typeUser === 'owner' && (\n            <StyledNavLink to=\"./rent-out\">\n              <IconCloth /> {t('rentOut')}\n            </StyledNavLink>\n          )}\n          <StyledNavLink to=\"./rent-in\">\n            <IconHanger />\n            {t('rentIn')}\n          </StyledNavLink>\n          <StyledNavLink to=\"./my-orders\">\n            <IconBag2 />\n            {t('myPurchases')}\n          </StyledNavLink>\n          {user.typeUser === 'owner' && (\n            <StyledNavLink to=\"./my-purchases\">\n              <IconShopCart /> {t('mySales')}\n            </StyledNavLink>\n          )}\n          <StyledNavLink to=\"./wallet\">\n            <IconCard /> {t('wallet')}\n          </StyledNavLink>\n          <StyledNavLink to=\"./cart\">\n            <StyledIconBag /> {t('basket')}\n          </StyledNavLink>\n          <StyledButton\n            type=\"button\"\n            title={t('logOut')}\n            onClick={() => dispatch(logOut())}\n          >\n            <IconExit />\n            {t('logOut')}\n          </StyledButton>\n        </SideBar>\n        <MainContent>\n          <Outlet />\n        </MainContent>\n      </WrapMainContent>\n    </Container>\n  );\n};\n\nexport default UserPage;\n"],"names":["UserPage","t","useTranslation","keyPrefix","dispatch","useDispatch","location","useLocation","user","useAuth","useTitle","_jsxs","Container","children","style","display","justifyContent","alignItems","_jsx","NavigationOverlay","SecondBox","pathname","ButtonAdd","to","IconPlus","WrapMainContent","SideBar","StyledNavLink","IconPerson","IconChat","IconHeart","typeUser","IconCloth","IconHanger","IconBag2","IconShopCart","IconCard","StyledIconBag","StyledButton","type","title","onClick","logOut","IconExit","MainContent","Outlet"],"sourceRoot":""}