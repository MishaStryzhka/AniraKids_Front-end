{"version":3,"file":"static/js/653.32cc0dbc.chunk.js","mappings":"kJAAA,MAIA,EAJkBA,KACTC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cCwCZ,EAvCcC,IAAgB,IAAf,MAAEC,GAAOD,EAGtB,OAFAE,QAAQC,IAAI,QAASF,IAGnBG,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,6HAAsB,KAAAM,OAAMJ,EAAMK,MAAM,GAAGC,YAAW,UAE1DT,EAAAA,EAAAA,KAAA,OAAAC,SACGE,EAAMK,MAAME,KAAIC,IACfP,QAAQC,IAAI,OAAQM,IAGlBL,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEY,MAAM,QACNC,OAAO,QACPC,IAAKH,EAAKI,QAAQC,OAAO,GAAGC,KAC5BC,IAAI,aAENZ,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,2DAAYU,EAAKQ,MAAMC,aAC1BpB,EAAAA,EAAAA,KAAA,KAAAC,SAAIU,EAAKI,QAAQM,cAGrBf,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIU,EAAKW,SACTtB,EAAAA,EAAAA,KAAA,KAAAC,SAAIU,EAAKY,YACTvB,EAAAA,EAAAA,KAAA,KAAAC,SAAIU,EAAKW,MAAQX,EAAKY,gBAhBhBZ,EAAKa,WAsBrBxB,EAAAA,EAAAA,KAACD,EAAS,MACN,E,cClCV,MAAM0B,EAAMC,EAAQ,MAsCpB,EApCaC,KACX,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAE9BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KAExCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KAEpCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAkBnC,OAhBA1B,QAAQC,IAAI,SAAUuB,IAEtBS,EAAAA,EAAAA,YAAU,KACRZ,EACGa,YACAC,MAAKC,IACJX,EAAUW,EAAKZ,QACfI,EAAeQ,EAAKT,aACpBG,GAAa,EAAM,IAEpBO,OAAMN,IACLC,EAASD,GACTD,GAAa,EAAM,GACnB,GACH,IAEKN,EAAOc,QAGb1C,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAA1C,SACG2B,EAAOlB,KAAIP,IACVH,EAAAA,EAAAA,KAAC4C,EAAK,CAAiBzC,MAAOA,GAAlBA,EAAMqB,UAJtBxB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,mHAOJ,C","sources":["components/Forms/FormOrder/FormOrder.js","components/Order/Order.js","pages/UserPage/Pages/Cart/Cart.js"],"sourcesContent":["const FormOrder = () => {\n  return <p>FormOrder</p>;\n};\n\nexport default FormOrder;\n","import FormOrder from 'components/Forms/FormOrder/FormOrder';\n\nconst Order = ({ order }) => {\n  console.log('order', order);\n\n  return (\n    <div>\n      <h2>Оформлення замовлення {`( ${order.items[0].serviceType} )`}</h2>\n\n      <div>\n        {order.items.map(item => {\n          console.log('item', item);\n\n          return (\n            <div key={item._id}>\n              <div>\n                <img\n                  width=\"150px\"\n                  height=\"150px\"\n                  src={item.product.photos[0].path}\n                  alt=\"product\"\n                />\n                <div>\n                  <p>Продавець: {item.owner.nickname}</p>\n                  <p>{item.product.name}</p>\n                </div>\n              </div>\n              <div>\n                <p>{item.price}</p>\n                <p>{item.quantity}</p>\n                <p>{item.price * item.quantity}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <FormOrder />\n    </div>\n  );\n};\n\nexport default Order;\n","import Order from 'components/Order/Order';\nimport { useEffect, useState } from 'react';\n\nconst api = require('../../../../api');\n\nconst Cart = () => {\n  const [orders, setOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [totalOrders, setTotalOrders] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [isLoading, setIsLoading] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState([]);\n\n  console.log('orders', orders);\n\n  useEffect(() => {\n    api\n      .getOrders()\n      .then(data => {\n        setOrders(data.orders);\n        setTotalOrders(data.totalOrders);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return !orders.length ? (\n    <p>Ваш кошик поки пустий</p>\n  ) : (\n    <>\n      {orders.map(order => (\n        <Order key={order._id} order={order} />\n      ))}\n    </>\n  );\n};\n\nexport default Cart;\n"],"names":["FormOrder","_jsx","children","_ref","order","console","log","_jsxs","concat","items","serviceType","map","item","width","height","src","product","photos","path","alt","owner","nickname","name","price","quantity","_id","api","require","Cart","orders","setOrders","useState","totalOrders","setTotalOrders","isLoading","setIsLoading","error","setError","useEffect","getOrders","then","data","catch","length","_Fragment","Order"],"sourceRoot":""}